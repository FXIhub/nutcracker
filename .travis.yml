language: python

python:
  - "2.7"

sudo: false

virtualenv:
  system_site_packages: true

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared
    - $HOME/nfft-3.2.3
    - $HOME/libspimage
    - $HOME/spsim
    - $HOME/local
    - $HOME/localpy
    - Â§HOME/mulpro
    
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - kubuntu-backports
      - couchbase-precise
    packages:
      - libpng-dev
      - libtiff4-dev
      - libfftw3-dev
      - cmake
      - gsl-bin
      - libgsl0-dev
      - swig
 # Python stuff (for discovering these packages set in virtualenv: system_site_packages: true)
      - python-scipy
      - python-numpy
      
# Install dependencies
before_install:
  - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HOME}/local/lib:${HOME}/local/lib64
  - export PYTHONPATH=${HOME}/localpy:${PYTHONPATH}
  - export PY27_PREFIX=/opt/python/2.7/
# Install hdf5
  - cd $HOME
  - export HDF5_DIR=${HOME}/hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared/
  - if [ ! -d "${HDF5_DIR}/include" ]; then wget https://support.hdfgroup.org/ftp/HDF5/current18/bin/hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared.tar.gz && tar xvzf hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared.tar.gz; else echo 'Using hdf5 from cached directory'; fi
  - export LD_LIBRARY_PATH=${HDF5_DIR}/lib:${LD_LIBRARY_PATH}
  - pip install h5py
# Install libspimage
  - cd $HOME
  - if [ ! -d "$HOME/libspimage/.git" ]; then git clone https://github.com/FXIhub/libspimage; else echo 'Using libspimage from cached directory'; fi
  - mkdir -p libspimage/build && cd libspimage/build
  - git pull
  - cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DUSE_CUDA=OFF -DPYTHON_WRAPPERS=ON -DHDF5_INCLUDE_DIR=${HDF5_DIR}/include -DHDF5_LIBRARY=${HDF5_DIR}/lib/libhdf5.so -DCMAKE_INSTALL_PREFIX=${HOME}/local -DPYTHON_INSTDIR=${HOME}/localpy -DPYTHON_INCLUDE_DIR=/usr/include/python2.7 -DPYTHON_INCLUDE_DIR2=/usr/include/python2.7 -DPYTHON_LIBRARY=${PY27_PREFIX}/lib/libpython2.7.so ..
  - make -j 2 VERBOSE=1
  - make install
# Install NFFT
  - cd $HOME
  - if [ ! -d "$HOME/nfft-3.2.3/include" ]; then wget https://www-user.tu-chemnitz.de/~potts/nfft/download/nfft-3.2.3.tar.gz && tar xvzf nfft-3.2.3.tar.gz; cd nfft-3.2.3 && ./configure --prefix=${HOME}/local && make && make install; else echo 'Using NFFT from cached directory'; fi
# Install spsim
  - cd $HOME
  - if [ ! -d "$HOME/spsim/.git" ]; then git clone https://github.com/FilipeMaia/spsim; else echo 'Using spsim from cached directory'; fi
  - mkdir -p spsim/build && cd spsim/build
  - git pull
  - cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_LIBRARY=ON -DUSE_CUDA=OFF -DUSE_NFFT=OFF -DPYTHON_WRAPPERS=ON -DHDF5_INCLUDE_DIR=${HDF5_DIR}/include -DHDF5_LIBRARY=${HDF5_DIR}/lib/libhdf5.so -DCMAKE_INSTALL_PREFIX=${HOME}/local -DPYTHON_INSTDIR=${HOME}/localpy -DPYTHON_INCLUDE_DIR=/usr/include/python2.7 -DPYTHON_LIBRARY=/usr/lib/libpython2.7.so -DPYTHON_INCLUDE_DIR2=/usr/include/python2.7 ..
  - make -j 2 VERBOSE=1
  - make install
# Install condor
  - cd $HOME
  - if [ ! -d "$HOME/condor/.git" ]; then git clone https://github.com/FXIhub/condor; else echo 'Using condor from cached directory'; fi
  - cd $HOME/condor
  - git pull
  - python setup.py install --nfft-include-dir=$HOME/local/include --nfft-library-dir=$HOME/local/lib
# Install mulpro
  - cd $HOME
  - if [ ! -d "$HOME/mulpro/.git" ]; then git clone https://github.com/mhantke/mulpro; else echo 'Using mulpro from cached directory'; fi
  - cd $HOME/mulpro
  - git pull
  - python setup.py install
# Install codecov
  - pip install codecov

# Install nutcracker
install:
  - cd $HOME/build/FXIhub/nutcracker
  - python setup.py install

# Running tests and examples
script:

# TESTING IMPORTS
  - python -c "import numpy; print numpy.__file__, numpy.__version__"
  - python -c "import scipy; print scipy.__file__, scipy.__version__"
  - python -c "import h5py; print h5py.__file__,  h5py.__version__"
  - python -c "import spimage; print spimage.__file__"
  - python -c "import spsim; print spsim.__file__"
  - python -c "import condor; print condor.__file__"
  
# CODECOV
  - coverage run --omit=nutcracker/utils/find_center.py,nutcracker/docs/* nutcracker/tests/test_all.py

after_success:
  - codecov --token=2842f913-5590-4a03-913d-55dbf06a1159
